# Stubs for django.utils.decorators (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class classonlymethod(classmethod):
    def __get__(self, instance: Any, cls: Optional[Any] = ...): ...

def method_decorator(decorator: Any, name: str = ...): ...
def decorator_from_middleware_with_args(middleware_class: Any): ...
def decorator_from_middleware(middleware_class: Any): ...
def available_attrs(fn: Any): ...
def make_middleware_decorator(middleware_class: Any): ...

class classproperty:
    fget: Any = ...
    def __init__(self, method: Optional[Any] = ...) -> None: ...
    def __get__(self, instance: Any, cls: Optional[Any] = ...): ...
    def getter(self, method: Any): ...
