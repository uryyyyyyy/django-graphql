# Stubs for django.db.utils (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

DEFAULT_DB_ALIAS: str
DJANGO_VERSION_PICKLE_KEY: str

class Error(Exception): ...
class InterfaceError(Error): ...
class DatabaseError(Error): ...
class DataError(DatabaseError): ...
class OperationalError(DatabaseError): ...
class IntegrityError(DatabaseError): ...
class InternalError(DatabaseError): ...
class ProgrammingError(DatabaseError): ...
class NotSupportedError(DatabaseError): ...

class DatabaseErrorWrapper:
    wrapper: Any = ...
    def __init__(self, wrapper: Any) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any) -> None: ...
    def __call__(self, func: Any): ...

def load_backend(backend_name: Any): ...

class ConnectionDoesNotExist(Exception): ...

class ConnectionHandler:
    def __init__(self, databases: Optional[Any] = ...) -> None: ...
    def databases(self): ...
    def ensure_defaults(self, alias: Any) -> None: ...
    def prepare_test_settings(self, alias: Any) -> None: ...
    def __getitem__(self, alias: Any): ...
    def __setitem__(self, key: Any, value: Any) -> None: ...
    def __delitem__(self, key: Any) -> None: ...
    def __iter__(self): ...
    def all(self): ...
    def close_all(self) -> None: ...

class ConnectionRouter:
    def __init__(self, routers: Optional[Any] = ...) -> None: ...
    def routers(self): ...
    db_for_read: Any = ...
    db_for_write: Any = ...
    def allow_relation(self, obj1: Any, obj2: Any, **hints: Any): ...
    def allow_migrate(self, db: Any, app_label: Any, **hints: Any): ...
    def allow_migrate_model(self, db: Any, model: Any): ...
    def get_migratable_models(self, app_config: Any, db: Any, include_auto_created: bool = ...): ...
