# Stubs for django.db.migrations.serializer (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

class BaseSerializer:
    value: Any = ...
    def __init__(self, value: Any) -> None: ...
    def serialize(self) -> None: ...

class BaseSequenceSerializer(BaseSerializer):
    def serialize(self): ...

class BaseSimpleSerializer(BaseSerializer):
    def serialize(self): ...

class DatetimeSerializer(BaseSerializer):
    value: Any = ...
    def serialize(self): ...

class DateSerializer(BaseSerializer):
    def serialize(self): ...

class DecimalSerializer(BaseSerializer):
    def serialize(self): ...

class DeconstructableSerializer(BaseSerializer):
    @staticmethod
    def serialize_deconstructed(path: Any, args: Any, kwargs: Any): ...
    def serialize(self): ...

class DictionarySerializer(BaseSerializer):
    def serialize(self): ...

class EnumSerializer(BaseSerializer):
    def serialize(self): ...

class FloatSerializer(BaseSimpleSerializer):
    def serialize(self): ...

class FrozensetSerializer(BaseSequenceSerializer): ...

class FunctionTypeSerializer(BaseSerializer):
    def serialize(self): ...

class FunctoolsPartialSerializer(BaseSerializer):
    def serialize(self): ...

class IterableSerializer(BaseSerializer):
    def serialize(self): ...

class ModelFieldSerializer(DeconstructableSerializer):
    def serialize(self): ...

class ModelManagerSerializer(DeconstructableSerializer):
    def serialize(self): ...

class OperationSerializer(BaseSerializer):
    def serialize(self): ...

class RegexSerializer(BaseSerializer):
    def serialize(self): ...

class SequenceSerializer(BaseSequenceSerializer): ...
class SetSerializer(BaseSequenceSerializer): ...

class SettingsReferenceSerializer(BaseSerializer):
    def serialize(self): ...

class TimedeltaSerializer(BaseSerializer):
    def serialize(self): ...

class TimeSerializer(BaseSerializer):
    def serialize(self): ...

class TupleSerializer(BaseSequenceSerializer): ...

class TypeSerializer(BaseSerializer):
    def serialize(self): ...

class UUIDSerializer(BaseSerializer):
    def serialize(self): ...

def serializer_factory(value: Any): ...
