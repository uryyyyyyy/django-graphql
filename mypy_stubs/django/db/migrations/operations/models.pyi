# Stubs for django.db.migrations.operations.models (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .fields import AddField, AlterField, FieldOperation, RemoveField, RenameField
from django.db.migrations.operations.base import Operation
from typing import Any, Optional

class ModelOperation(Operation):
    name: Any = ...
    def __init__(self, name: Any) -> None: ...
    def name_lower(self): ...
    def references_model(self, name: Any, app_label: Optional[Any] = ...): ...
    def reduce(self, operation: Any, in_between: Any, app_label: Optional[Any] = ...): ...

class CreateModel(ModelOperation):
    serialization_expand_args: Any = ...
    fields: Any = ...
    options: Any = ...
    bases: Any = ...
    managers: Any = ...
    def __init__(self, name: Any, fields: Any, options: Optional[Any] = ..., bases: Optional[Any] = ..., managers: Optional[Any] = ...) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label: Any, state: Any) -> None: ...
    def database_forwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def database_backwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def describe(self): ...
    def references_model(self, name: Any, app_label: Optional[Any] = ...): ...
    def model_to_key(self, model: Any): ...
    def reduce(self, operation: Any, in_between: Any, app_label: Optional[Any] = ...): ...

class DeleteModel(ModelOperation):
    def deconstruct(self): ...
    def state_forwards(self, app_label: Any, state: Any) -> None: ...
    def database_forwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def database_backwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def describe(self): ...

class RenameModel(ModelOperation):
    old_name: Any = ...
    new_name: Any = ...
    def __init__(self, old_name: Any, new_name: Any) -> None: ...
    def old_name_lower(self): ...
    def new_name_lower(self): ...
    def deconstruct(self): ...
    def state_forwards(self, app_label: Any, state: Any) -> None: ...
    def database_forwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def database_backwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def references_model(self, name: Any, app_label: Optional[Any] = ...): ...
    def describe(self): ...
    def reduce(self, operation: Any, in_between: Any, app_label: Optional[Any] = ...): ...

class AlterModelTable(ModelOperation):
    table: Any = ...
    def __init__(self, name: Any, table: Any) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label: Any, state: Any) -> None: ...
    def database_forwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def database_backwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any): ...
    def describe(self): ...
    def reduce(self, operation: Any, in_between: Any, app_label: Optional[Any] = ...): ...

class ModelOptionOperation(ModelOperation):
    def reduce(self, operation: Any, in_between: Any, app_label: Optional[Any] = ...): ...

class FieldRelatedOptionOperation(ModelOptionOperation):
    def reduce(self, operation: Any, in_between: Any, app_label: Optional[Any] = ...): ...

class AlterUniqueTogether(FieldRelatedOptionOperation):
    option_name: str = ...
    unique_together: Any = ...
    def __init__(self, name: Any, unique_together: Any) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label: Any, state: Any) -> None: ...
    def database_forwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def database_backwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any): ...
    def references_field(self, model_name: Any, name: Any, app_label: Optional[Any] = ...): ...
    def describe(self): ...

class AlterIndexTogether(FieldRelatedOptionOperation):
    option_name: str = ...
    index_together: Any = ...
    def __init__(self, name: Any, index_together: Any) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label: Any, state: Any) -> None: ...
    def database_forwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def database_backwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any): ...
    def references_field(self, model_name: Any, name: Any, app_label: Optional[Any] = ...): ...
    def describe(self): ...

class AlterOrderWithRespectTo(FieldRelatedOptionOperation):
    order_with_respect_to: Any = ...
    def __init__(self, name: Any, order_with_respect_to: Any) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label: Any, state: Any) -> None: ...
    def database_forwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def database_backwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def references_field(self, model_name: Any, name: Any, app_label: Optional[Any] = ...): ...
    def describe(self): ...

class AlterModelOptions(ModelOptionOperation):
    ALTER_OPTION_KEYS: Any = ...
    options: Any = ...
    def __init__(self, name: Any, options: Any) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label: Any, state: Any) -> None: ...
    def database_forwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def database_backwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def describe(self): ...

class AlterModelManagers(ModelOptionOperation):
    serialization_expand_args: Any = ...
    managers: Any = ...
    def __init__(self, name: Any, managers: Any) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label: Any, state: Any) -> None: ...
    def database_forwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def database_backwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def describe(self): ...

class IndexOperation(Operation):
    option_name: str = ...
    def model_name_lower(self): ...

class AddIndex(IndexOperation):
    model_name: Any = ...
    index: Any = ...
    def __init__(self, model_name: Any, index: Any) -> None: ...
    def state_forwards(self, app_label: Any, state: Any) -> None: ...
    def database_forwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def database_backwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def deconstruct(self): ...
    def describe(self): ...

class RemoveIndex(IndexOperation):
    model_name: Any = ...
    name: Any = ...
    def __init__(self, model_name: Any, name: Any) -> None: ...
    def state_forwards(self, app_label: Any, state: Any) -> None: ...
    def database_forwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def database_backwards(self, app_label: Any, schema_editor: Any, from_state: Any, to_state: Any) -> None: ...
    def deconstruct(self): ...
    def describe(self): ...
