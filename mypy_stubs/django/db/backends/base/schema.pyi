# Stubs for django.db.backends.base.schema (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

logger: Any

class BaseDatabaseSchemaEditor:
    sql_create_table: str = ...
    sql_rename_table: str = ...
    sql_retablespace_table: str = ...
    sql_delete_table: str = ...
    sql_create_column: str = ...
    sql_alter_column: str = ...
    sql_alter_column_type: str = ...
    sql_alter_column_null: str = ...
    sql_alter_column_not_null: str = ...
    sql_alter_column_default: str = ...
    sql_alter_column_no_default: str = ...
    sql_delete_column: str = ...
    sql_rename_column: str = ...
    sql_update_with_default: str = ...
    sql_create_check: str = ...
    sql_delete_check: str = ...
    sql_create_unique: str = ...
    sql_delete_unique: str = ...
    sql_create_fk: str = ...
    sql_create_inline_fk: Any = ...
    sql_delete_fk: str = ...
    sql_create_index: str = ...
    sql_delete_index: str = ...
    sql_create_pk: str = ...
    sql_delete_pk: str = ...
    sql_delete_procedure: str = ...
    connection: Any = ...
    collect_sql: Any = ...
    collected_sql: Any = ...
    atomic_migration: Any = ...
    def __init__(self, connection: Any, collect_sql: bool = ..., atomic: bool = ...) -> None: ...
    deferred_sql: Any = ...
    atomic: Any = ...
    def __enter__(self): ...
    def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any) -> None: ...
    def execute(self, sql: Any, params: Any = ...) -> None: ...
    def quote_name(self, name: Any): ...
    def column_sql(self, model: Any, field: Any, include_default: bool = ...): ...
    def skip_default(self, field: Any): ...
    def prepare_default(self, value: Any) -> None: ...
    def effective_default(self, field: Any): ...
    def quote_value(self, value: Any) -> None: ...
    def create_model(self, model: Any) -> None: ...
    def delete_model(self, model: Any) -> None: ...
    def add_index(self, model: Any, index: Any) -> None: ...
    def remove_index(self, model: Any, index: Any) -> None: ...
    def alter_unique_together(self, model: Any, old_unique_together: Any, new_unique_together: Any) -> None: ...
    def alter_index_together(self, model: Any, old_index_together: Any, new_index_together: Any) -> None: ...
    def alter_db_table(self, model: Any, old_db_table: Any, new_db_table: Any) -> None: ...
    def alter_db_tablespace(self, model: Any, old_db_tablespace: Any, new_db_tablespace: Any) -> None: ...
    def add_field(self, model: Any, field: Any): ...
    def remove_field(self, model: Any, field: Any): ...
    def alter_field(self, model: Any, old_field: Any, new_field: Any, strict: bool = ...): ...
    def remove_procedure(self, procedure_name: Any, param_types: Any = ...) -> None: ...
