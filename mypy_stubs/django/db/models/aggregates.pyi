# Stubs for django.db.models.aggregates (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from django.db.models.expressions import Func
from typing import Any, Optional

class Aggregate(Func):
    contains_aggregate: bool = ...
    name: Any = ...
    filter_template: str = ...
    window_compatible: bool = ...
    filter: Any = ...
    def __init__(self, *args: Any, filter: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def get_source_fields(self): ...
    def get_source_expressions(self): ...
    def set_source_expressions(self, exprs: Any): ...
    def resolve_expression(self, query: Optional[Any] = ..., allow_joins: bool = ..., reuse: Optional[Any] = ..., summarize: bool = ..., for_save: bool = ...): ...
    @property
    def default_alias(self): ...
    def get_group_by_cols(self): ...
    def as_sql(self, compiler, connection): ...

class Avg(Aggregate):
    function: str = ...
    name: str = ...
    def as_mysql(self, compiler: Any, connection: Any): ...
    def as_oracle(self, compiler: Any, connection: Any): ...

class Count(Aggregate):
    function: str = ...
    name: str = ...
    template: str = ...
    output_field: Any = ...
    def __init__(self, expression: Any, distinct: bool = ..., filter: Optional[Any] = ..., **extra: Any) -> None: ...
    def convert_value(self): ...

class Max(Aggregate):
    function: str = ...
    name: str = ...

class Min(Aggregate):
    function: str = ...
    name: str = ...

class StdDev(Aggregate):
    name: str = ...
    output_field: Any = ...
    function: Any = ...
    def __init__(self, expression: Any, sample: bool = ..., **extra: Any) -> None: ...

class Sum(Aggregate):
    function: str = ...
    name: str = ...
    def as_mysql(self, compiler: Any, connection: Any): ...
    def as_oracle(self, compiler: Any, connection: Any): ...

class Variance(Aggregate):
    name: str = ...
    output_field: Any = ...
    function: Any = ...
    def __init__(self, expression: Any, sample: bool = ..., **extra: Any) -> None: ...
