# Stubs for django.db.models.sql.where (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from django.utils import tree
from typing import Any, Optional

AND: str
OR: str

class WhereNode(tree.Node):
    default: Any = ...
    resolved: bool = ...
    conditional: bool = ...
    def split_having(self, negated: bool = ...): ...
    def as_sql(self, compiler: Any, connection: Any): ...
    def get_group_by_cols(self): ...
    def get_source_expressions(self): ...
    children: Any = ...
    def set_source_expressions(self, children: Any) -> None: ...
    def relabel_aliases(self, change_map: Any) -> None: ...
    def clone(self): ...
    def relabeled_clone(self, change_map: Any): ...
    def contains_aggregate(self): ...
    def contains_over_clause(self): ...
    @property
    def is_summary(self): ...
    def resolve_expression(self, *args: Any, **kwargs: Any): ...

class NothingNode:
    contains_aggregate: bool = ...
    def as_sql(self, compiler: Optional[Any] = ..., connection: Optional[Any] = ...) -> None: ...

class ExtraWhere:
    contains_aggregate: bool = ...
    sqls: Any = ...
    params: Any = ...
    def __init__(self, sqls: Any, params: Any) -> None: ...
    def as_sql(self, compiler: Optional[Any] = ..., connection: Optional[Any] = ...): ...

class SubqueryConstraint:
    contains_aggregate: bool = ...
    alias: Any = ...
    columns: Any = ...
    targets: Any = ...
    query_object: Any = ...
    def __init__(self, alias: Any, columns: Any, targets: Any, query_object: Any) -> None: ...
    def as_sql(self, compiler: Any, connection: Any): ...
