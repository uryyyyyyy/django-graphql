# Stubs for django.db.models.fields.files (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from django.core.files.base import File
from django.core.files.images import ImageFile
from django.db.models.fields import Field
from typing import Any, Optional

class FieldFile(File):
    instance: Any = ...
    field: Any = ...
    storage: Any = ...
    def __init__(self, instance: Any, field: Any, name: Any) -> None: ...
    def __eq__(self, other: Any): ...
    def __hash__(self): ...
    file: Any = ...
    @property
    def path(self): ...
    @property
    def url(self): ...
    @property
    def size(self): ...
    def open(self, mode: str = ...): ...  # type: ignore
    name: Any = ...
    def save(self, name: Any, content: Any, save: bool = ...) -> None: ...
    def delete(self, save: bool = ...) -> None: ...
    @property
    def closed(self): ...
    def close(self) -> None: ...

class FileDescriptor:
    field: Any = ...
    def __init__(self, field: Any) -> None: ...
    def __get__(self, instance: Any, cls: Optional[Any] = ...): ...
    def __set__(self, instance: Any, value: Any) -> None: ...

class FileField(Field):
    attr_class: Any = ...
    descriptor_class: Any = ...
    description: Any = ...
    storage: Any = ...
    upload_to: Any = ...
    def __init__(self, verbose_name: Optional[Any] = ..., name: Optional[Any] = ..., upload_to: str = ..., storage: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def check(self, **kwargs: Any): ...
    def deconstruct(self): ...
    def get_internal_type(self): ...
    def get_prep_value(self, value: Any): ...
    def pre_save(self, model_instance: Any, add: Any): ...
    def contribute_to_class(self, cls: Any, name: Any, **kwargs: Any) -> None: ...  # type: ignore
    def generate_filename(self, instance: Any, filename: Any): ...
    def save_form_data(self, instance: Any, data: Any) -> None: ...
    def formfield(self, **kwargs: Any): ...

class ImageFileDescriptor(FileDescriptor):
    def __set__(self, instance: Any, value: Any) -> None: ...

class ImageFieldFile(ImageFile, FieldFile):
    def delete(self, save: bool = ...) -> None: ...

class ImageField(FileField):
    attr_class: Any = ...
    descriptor_class: Any = ...
    description: Any = ...
    def __init__(self, verbose_name: Optional[Any] = ..., name: Optional[Any] = ..., width_field: Optional[Any] = ..., height_field: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def check(self, **kwargs: Any): ...
    def deconstruct(self): ...
    def contribute_to_class(self, cls: Any, name: Any, **kwargs: Any) -> None: ...  # type: ignore
    def update_dimension_fields(self, instance: Any, force: bool = ..., *args: Any, **kwargs: Any) -> None: ...
    def formfield(self, **kwargs: Any): ...
