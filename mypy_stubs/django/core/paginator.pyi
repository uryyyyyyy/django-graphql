# Stubs for django.core.paginator (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import collections.abc
from typing import Any

class UnorderedObjectListWarning(RuntimeWarning): ...
class InvalidPage(Exception): ...
class PageNotAnInteger(InvalidPage): ...
class EmptyPage(InvalidPage): ...

class Paginator:
    object_list: Any = ...
    per_page: Any = ...
    orphans: Any = ...
    allow_empty_first_page: Any = ...
    def __init__(self, object_list: Any, per_page: Any, orphans: int = ..., allow_empty_first_page: bool = ...) -> None: ...
    def validate_number(self, number: Any): ...
    def get_page(self, number: Any): ...
    def page(self, number: Any): ...
    def count(self): ...
    def num_pages(self): ...
    @property
    def page_range(self): ...
QuerySetPaginator = Paginator

class Page(collections.abc.Sequence):
    object_list: Any = ...
    number: Any = ...
    paginator: Any = ...
    def __init__(self, object_list: Any, number: Any, paginator: Any) -> None: ...
    def __len__(self): ...
    def __getitem__(self, index: Any): ...
    def has_next(self): ...
    def has_previous(self): ...
    def has_other_pages(self): ...
    def next_page_number(self): ...
    def previous_page_number(self): ...
    def start_index(self): ...
    def end_index(self): ...
