# Stubs for django.contrib.sessions.backends.base (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

VALID_KEY_CHARS: Any

class CreateError(Exception): ...
class UpdateError(Exception): ...

class SessionBase:
    TEST_COOKIE_NAME: str = ...
    TEST_COOKIE_VALUE: str = ...
    accessed: bool = ...
    modified: bool = ...
    serializer: Any = ...
    def __init__(self, session_key: Optional[Any] = ...) -> None: ...
    def __contains__(self, key: Any): ...
    def __getitem__(self, key: Any): ...
    def __setitem__(self, key: Any, value: Any) -> None: ...
    def __delitem__(self, key: Any) -> None: ...
    def get(self, key: Any, default: Optional[Any] = ...): ...
    def pop(self, key: Any, default: Any = ...): ...
    def setdefault(self, key: Any, value: Any): ...
    def set_test_cookie(self) -> None: ...
    def test_cookie_worked(self): ...
    def delete_test_cookie(self) -> None: ...
    def encode(self, session_dict: Any): ...
    def decode(self, session_data: Any): ...
    def update(self, dict_: Any) -> None: ...
    def has_key(self, key: Any): ...
    def keys(self): ...
    def values(self): ...
    def items(self): ...
    def clear(self) -> None: ...
    def is_empty(self): ...
    session_key: Any = ...
    def get_expiry_age(self, **kwargs: Any): ...
    def get_expiry_date(self, **kwargs: Any): ...
    def set_expiry(self, value: Any) -> None: ...
    def get_expire_at_browser_close(self): ...
    def flush(self) -> None: ...
    def cycle_key(self) -> None: ...
    def exists(self, session_key: Any) -> None: ...
    def create(self) -> None: ...
    def save(self, must_create: bool = ...) -> None: ...
    def delete(self, session_key: Optional[Any] = ...) -> None: ...
    def load(self) -> None: ...
    @classmethod
    def clear_expired(cls) -> None: ...
