# Stubs for django.contrib.admin.filters (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

class ListFilter:
    title: Any = ...
    template: str = ...
    used_parameters: Any = ...
    def __init__(self, request: Any, params: Any, model: Any, model_admin: Any) -> None: ...
    def has_output(self) -> None: ...
    def choices(self, changelist: Any) -> None: ...
    def queryset(self, request: Any, queryset: Any) -> None: ...
    def expected_parameters(self) -> None: ...

class SimpleListFilter(ListFilter):
    parameter_name: Any = ...
    lookup_choices: Any = ...
    def __init__(self, request: Any, params: Any, model: Any, model_admin: Any) -> None: ...
    def has_output(self): ...
    def value(self): ...
    def lookups(self, request: Any, model_admin: Any) -> None: ...
    def expected_parameters(self): ...
    def choices(self, changelist: Any) -> None: ...

class FieldListFilter(ListFilter):
    field: Any = ...
    field_path: Any = ...
    title: Any = ...
    def __init__(self, field: Any, request: Any, params: Any, model: Any, model_admin: Any, field_path: Any) -> None: ...
    def has_output(self): ...
    def queryset(self, request: Any, queryset: Any): ...
    @classmethod
    def register(cls, test: Any, list_filter_class: Any, take_priority: bool = ...) -> None: ...
    @classmethod
    def create(cls, field: Any, request: Any, params: Any, model: Any, model_admin: Any, field_path: Any): ...

class RelatedFieldListFilter(FieldListFilter):
    lookup_kwarg: Any = ...
    lookup_kwarg_isnull: Any = ...
    lookup_val: Any = ...
    lookup_val_isnull: Any = ...
    lookup_choices: Any = ...
    lookup_title: Any = ...
    title: Any = ...
    empty_value_display: Any = ...
    def __init__(self, field: Any, request: Any, params: Any, model: Any, model_admin: Any, field_path: Any) -> None: ...
    @property
    def include_empty_choice(self): ...
    def has_output(self): ...
    def expected_parameters(self): ...
    def field_choices(self, field: Any, request: Any, model_admin: Any): ...
    def choices(self, changelist: Any) -> None: ...

class BooleanFieldListFilter(FieldListFilter):
    lookup_kwarg: Any = ...
    lookup_kwarg2: Any = ...
    lookup_val: Any = ...
    lookup_val2: Any = ...
    def __init__(self, field: Any, request: Any, params: Any, model: Any, model_admin: Any, field_path: Any) -> None: ...
    def expected_parameters(self): ...
    def choices(self, changelist: Any) -> None: ...

class ChoicesFieldListFilter(FieldListFilter):
    lookup_kwarg: Any = ...
    lookup_kwarg_isnull: Any = ...
    lookup_val: Any = ...
    lookup_val_isnull: Any = ...
    def __init__(self, field: Any, request: Any, params: Any, model: Any, model_admin: Any, field_path: Any) -> None: ...
    def expected_parameters(self): ...
    def choices(self, changelist: Any) -> None: ...

class DateFieldListFilter(FieldListFilter):
    field_generic: Any = ...
    date_params: Any = ...
    lookup_kwarg_since: Any = ...
    lookup_kwarg_until: Any = ...
    links: Any = ...
    lookup_kwarg_isnull: Any = ...
    def __init__(self, field: Any, request: Any, params: Any, model: Any, model_admin: Any, field_path: Any) -> None: ...
    def expected_parameters(self): ...
    def choices(self, changelist: Any) -> None: ...

class AllValuesFieldListFilter(FieldListFilter):
    lookup_kwarg: Any = ...
    lookup_kwarg_isnull: Any = ...
    lookup_val: Any = ...
    lookup_val_isnull: Any = ...
    empty_value_display: Any = ...
    lookup_choices: Any = ...
    def __init__(self, field: Any, request: Any, params: Any, model: Any, model_admin: Any, field_path: Any) -> None: ...
    def expected_parameters(self): ...
    def choices(self, changelist: Any) -> None: ...

class RelatedOnlyFieldListFilter(RelatedFieldListFilter):
    def field_choices(self, field: Any, request: Any, model_admin: Any): ...
