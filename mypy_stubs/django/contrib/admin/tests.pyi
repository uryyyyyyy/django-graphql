# Stubs for django.contrib.admin.tests (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from django.contrib.staticfiles.testing import StaticLiveServerTestCase
from django.test.selenium import SeleniumTestCase
from django.utils.deprecation import MiddlewareMixin
from typing import Any

class CSPMiddleware(MiddlewareMixin):
    def process_response(self, request: Any, response: Any): ...

class AdminSeleniumTestCase(SeleniumTestCase, StaticLiveServerTestCase):
    available_apps: Any = ...
    def wait_until(self, callback: Any, timeout: int = ...) -> None: ...
    def wait_for_popup(self, num_windows: int = ..., timeout: int = ...): ...
    def wait_for(self, css_selector: Any, timeout: int = ...) -> None: ...
    def wait_for_text(self, css_selector: Any, text: Any, timeout: int = ...) -> None: ...
    def wait_for_value(self, css_selector: Any, text: Any, timeout: int = ...) -> None: ...
    def wait_until_visible(self, css_selector: Any, timeout: int = ...) -> None: ...
    def wait_until_invisible(self, css_selector: Any, timeout: int = ...) -> None: ...
    def wait_page_loaded(self) -> None: ...
    def admin_login(self, username: Any, password: Any, login_url: str = ...) -> None: ...
    def get_css_value(self, selector: Any, attribute: Any): ...
    def get_select_option(self, selector: Any, value: Any): ...
    def assertSelectOptions(self, selector: Any, values: Any) -> None: ...
    def assertSelectedOptions(self, selector: Any, values: Any) -> None: ...
    def has_css_class(self, selector: Any, klass: Any): ...
