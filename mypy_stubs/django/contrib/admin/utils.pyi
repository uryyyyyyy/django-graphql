# Stubs for django.contrib.admin.utils (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from django.db.models.deletion import Collector
from typing import Any, Optional

class FieldIsAForeignKeyColumnName(Exception): ...

def lookup_needs_distinct(opts: Any, lookup_path: Any): ...
def prepare_lookup_value(key: Any, value: Any): ...
def quote(s: Any): ...
def unquote(s: Any): ...
def flatten(fields: Any): ...
def flatten_fieldsets(fieldsets: Any): ...
def get_deleted_objects(objs: Any, request: Any, admin_site: Any): ...

class NestedObjects(Collector):
    edges: Any = ...
    protected: Any = ...
    model_objs: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def add_edge(self, source: Any, target: Any) -> None: ...
    def collect(self, objs: Any, source: Optional[Any] = ..., source_attr: Optional[Any] = ..., **kwargs: Any): ...
    def related_objects(self, related: Any, objs: Any): ...
    def nested(self, format_callback: Optional[Any] = ...): ...
    def can_fast_delete(self, *args: Any, **kwargs: Any): ...

def model_format_dict(obj: Any): ...
def model_ngettext(obj: Any, n: Optional[Any] = ...): ...
def lookup_field(name: Any, obj: Any, model_admin: Optional[Any] = ...): ...
def label_for_field(name: Any, model: Any, model_admin: Optional[Any] = ..., return_attr: bool = ..., form: Optional[Any] = ...): ...
def help_text_for_field(name: Any, model: Any): ...
def display_for_field(value: Any, field: Any, empty_value_display: Any): ...
def display_for_value(value: Any, empty_value_display: Any, boolean: bool = ...): ...

class NotRelationField(Exception): ...

def get_model_from_relation(field: Any): ...
def reverse_field_path(model: Any, path: Any): ...
def get_fields_from_path(model: Any, path: Any): ...
def construct_change_message(form: Any, formsets: Any, add: Any): ...
