# Stubs for django.template.loader_tags (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .base import Node, Template, TemplateSyntaxError, TextNode, Variable, token_kwargs
from .library import Library
from typing import Any, Optional

register: Any
BLOCK_CONTEXT_KEY: str

class BlockContext:
    blocks: Any = ...
    def __init__(self) -> None: ...
    def add_blocks(self, blocks: Any) -> None: ...
    def pop(self, name: Any): ...
    def push(self, name: Any, block: Any) -> None: ...
    def get_block(self, name: Any): ...

class BlockNode(Node):
    def __init__(self, name: Any, nodelist: Any, parent: Optional[Any] = ...) -> None: ...
    def render(self, context: Any): ...
    def super(self): ...

class ExtendsNode(Node):
    must_be_first: bool = ...
    context_key: str = ...
    nodelist: Any = ...
    parent_name: Any = ...
    template_dirs: Any = ...
    blocks: Any = ...
    def __init__(self, nodelist: Any, parent_name: Any, template_dirs: Optional[Any] = ...) -> None: ...
    def find_template(self, template_name: Any, context: Any): ...
    def get_parent(self, context: Any): ...
    def render(self, context: Any): ...

class IncludeNode(Node):
    context_key: str = ...
    template: Any = ...
    extra_context: Any = ...
    isolated_context: Any = ...
    def __init__(self, template: Any, *args: Any, extra_context: Optional[Any] = ..., isolated_context: bool = ..., **kwargs: Any) -> None: ...
    def render(self, context: Any): ...

def do_block(parser: Any, token: Any): ...
def construct_relative_path(current_template_name: Any, relative_name: Any): ...
def do_extends(parser: Any, token: Any): ...
def do_include(parser: Any, token: Any): ...
