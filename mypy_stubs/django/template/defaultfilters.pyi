# Stubs for django.template.defaultfilters (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .base import Variable, VariableDoesNotExist
from .library import Library
from typing import Any, Optional

register: Any

def stringfilter(func: Any): ...
def addslashes(value: Any): ...
def capfirst(value: Any): ...
def escapejs_filter(value: Any): ...
def json_script(value: Any, element_id: Any): ...
def floatformat(text: Any, arg: int = ...): ...
def iriencode(value: Any): ...
def linenumbers(value: Any, autoescape: bool = ...): ...
def lower(value: Any): ...
def make_list(value: Any): ...
def slugify(value: Any): ...
def stringformat(value: Any, arg: Any): ...
def title(value: Any): ...
def truncatechars(value: Any, arg: Any): ...
def truncatechars_html(value: Any, arg: Any): ...
def truncatewords(value: Any, arg: Any): ...
def truncatewords_html(value: Any, arg: Any): ...
def upper(value: Any): ...
def urlencode(value: Any, safe: Optional[Any] = ...): ...
def urlize(value: Any, autoescape: bool = ...): ...
def urlizetrunc(value: Any, limit: Any, autoescape: bool = ...): ...
def wordcount(value: Any): ...
def wordwrap(value: Any, arg: Any): ...
def ljust(value: Any, arg: Any): ...
def rjust(value: Any, arg: Any): ...
def center(value: Any, arg: Any): ...
def cut(value: Any, arg: Any): ...
def escape_filter(value: Any): ...
def force_escape(value: Any): ...
def linebreaks_filter(value: Any, autoescape: bool = ...): ...
def linebreaksbr(value: Any, autoescape: bool = ...): ...
def safe(value: Any): ...
def safeseq(value: Any): ...
def striptags(value: Any): ...
def dictsort(value: Any, arg: Any): ...
def dictsortreversed(value: Any, arg: Any): ...
def first(value: Any): ...
def join(value: Any, arg: Any, autoescape: bool = ...): ...
def last(value: Any): ...
def length(value: Any): ...
def length_is(value: Any, arg: Any): ...
def random(value: Any): ...
def slice_filter(value: Any, arg: Any): ...
def unordered_list(value: Any, autoescape: bool = ...): ...
def add(value: Any, arg: Any): ...
def get_digit(value: Any, arg: Any): ...
def date(value: Any, arg: Optional[Any] = ...): ...
def time(value: Any, arg: Optional[Any] = ...): ...
def timesince_filter(value: Any, arg: Optional[Any] = ...): ...
def timeuntil_filter(value: Any, arg: Optional[Any] = ...): ...
def default(value: Any, arg: Any): ...
def default_if_none(value: Any, arg: Any): ...
def divisibleby(value: Any, arg: Any): ...
def yesno(value: Any, arg: Optional[Any] = ...): ...
def filesizeformat(bytes_: Any): ...
def pluralize(value: Any, arg: str = ...): ...
def phone2numeric_filter(value: Any): ...
def pprint(value: Any): ...
