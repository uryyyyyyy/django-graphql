# Stubs for django.forms.boundfield (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class BoundField:
    form: Any = ...
    field: Any = ...
    name: Any = ...
    html_name: Any = ...
    html_initial_name: Any = ...
    html_initial_id: Any = ...
    label: Any = ...
    help_text: Any = ...
    def __init__(self, form: Any, field: Any, name: Any) -> None: ...
    def subwidgets(self): ...
    def __bool__(self): ...
    def __iter__(self): ...
    def __len__(self): ...
    def __getitem__(self, idx: Any): ...
    @property
    def errors(self): ...
    def as_widget(self, widget: Optional[Any] = ..., attrs: Optional[Any] = ..., only_initial: bool = ...): ...
    def as_text(self, attrs: Optional[Any] = ..., **kwargs: Any): ...
    def as_textarea(self, attrs: Optional[Any] = ..., **kwargs: Any): ...
    def as_hidden(self, attrs: Optional[Any] = ..., **kwargs: Any): ...
    @property
    def data(self): ...
    def value(self): ...
    def label_tag(self, contents: Optional[Any] = ..., attrs: Optional[Any] = ..., label_suffix: Optional[Any] = ...): ...
    def css_classes(self, extra_classes: Optional[Any] = ...): ...
    @property
    def is_hidden(self): ...
    @property
    def auto_id(self): ...
    @property
    def id_for_label(self): ...
    def initial(self): ...
    def build_widget_attrs(self, attrs: Any, widget: Optional[Any] = ...): ...

class BoundWidget:
    parent_widget: Any = ...
    data: Any = ...
    renderer: Any = ...
    def __init__(self, parent_widget: Any, data: Any, renderer: Any) -> None: ...
    def tag(self, wrap_label: bool = ...): ...
    @property
    def template_name(self): ...
    @property
    def id_for_label(self): ...
    @property
    def choice_label(self): ...
